---
# Set permissions
- name: Set directory permissions for release_drupal_path
  file:
    path: "{{ ansistrano_current_dir }}"
    mode: "0755"
    state: directory
    recurse: yes
  tags:
    - pre-deploy

- name: Set directory permissions for ansistrano_shared_path
  file:
    path: "{{ ansistrano_release_path.stdout }}/web/sites/default/files"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: true

- name: Ensure properly permissions to vendor's directory
  file:
    path: "{{ ansistrano_release_path.stdout }}/vendor"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: true

- name: Ensure properly permissions to Drupal's root directory
  file:
    path: "{{ ansistrano_release_path.stdout }}/web"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: false

- name: Ensure properly permissions to Drupal's sites directory
  file:
    path: "{{ ansistrano_release_path.stdout }}/web/sites"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: false

- name: Ensure properly permissions to Drupal's sites/default directory
  file:
    path: "{{ ansistrano_release_path.stdout }}/web/sites/default"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: false

- name: Ensure properly permissions to Drupal's sites/default directory
  file:
    path: "{{ ansistrano_release_path.stdout }}/web/core"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: false

# Unarchive file sql from GZIP
- name: Extract SQL file from Gzip archive using Drush Shell
  ansible.builtin.shell: "gunzip -c {{ ansistrano_release_path.stdout }}/sql/db.sql.gz > {{ ansistrano_release_path.stdout }}/sql/db.sql"
  # when: vault_mode == 'install'
  tags:
    - unarchive_db

# Import database from local machine to remote server
- name: Import MySQL Database
  ansible.builtin.mysql_db:
    name: "{{ vault_database_name }}"
    login_user: "{{ vault_database_user }}"
    login_password: "{{ vault_database_password }}"
    state: import
    target: "{{ ansistrano_release_path.stdout }}/sql/db.sql"
  # when: vault_mode == 'install'
  tags:
    - db_update

# Import configuration
- name: Import configuration
  command: "{{ release_drush_path }} config-import --yes --verbose"
  args:
    chdir: "{{ ansistrano_release_path.stdout }}"
  # when: vault_mode == 'update'
  tags:
    - import_config

# Clear cache
- name: Rebuild Drupal cache using Drush
  shell: |
    {{ release_drush_path }}
  args:
    chdir: "{{ release_drupal_path }}"
    executable: /bin/bash
  tags:
    - drupal
# - name: Override the generated site UUID with our own.
#   command: >
#     drush config-set -y system.site uuid {{ vault_drupal_site_uuid }}
#     chdir={{ ansistrano_release_path.stdout }}
# when: "inventory_hostname = groups-webservers [0]"

# - name: Run database updates
#   command: >
#     {{ release_drush_path }}
#     updatedb -y
#     chdir={{ release_drupal_path }}
#   register: update_database_output
# changed_when: "'No pending updates' not in update_database_output.stderr"
# - name: Delete existing shortcut entities
#   command: "{{ release_drush_path }} entity-delete shortcut_link shortcut_set -y"
#   args:
#     chdir: "{{ release_drupal_path }}"
#   register: delete_shortcut_output
#   ignore_errors: yes
# Impor configuration

# - name: Print Ansistrano release_drupal_dir_path
#   debug:
#     msg: "Ansistrano Release Path: {{ release_drupal_dir_path }}"

# - name: Print Ansistrano release_drupal_path
#   debug:
#     msg: "Ansistrano Release Path: {{ release_drupal_path }}"
# - name: Import Drupal configuration
#   command: "{{ release_drush_path }} config-import -y"
#   args:
#     chdir: "{{ release_drupal_dir_path }}"
#   register: config_import_output
#   tags:
#     - drupal

# - name: Rebuild Drupal cache using Drush
#   shell: |
#     {{ release_drush_path }}
#   args:
#     chdir: "{{ release_drupal_path }}"
#     executable: /bin/bash
#   tags:
#     - drupal
