---
# Set permissions
- name: Set directory permissions for release_drupal_path
  file:
    path: '{{ ansistrano_current_dir }}'
    mode: '0755'
    state: directory
    recurse: yes

- name: Set directory permissions for ansistrano_shared_path
  file:
    path: '{{ ansistrano_release_path.stdout }}/web/sites/default/files'
    mode: '0755'
    state: directory
    owner: '{{ vault_server_client }}'
    group: '{{ vault_server_group }}'
    recurse: true

- name: Ensure properly permissions to vendor's directory
  file:
    path: '{{ ansistrano_release_path.stdout }}/vendor'
    mode: '0755'
    state: directory
    owner: '{{ vault_server_client }}'
    group: '{{ vault_server_group }}'
    recurse: true

- name: Ensure properly permissions to Drupal's root /web directory
  file:
    path: '{{ ansistrano_release_path.stdout }}/web'
    mode: '0755'
    state: directory
    owner: '{{ vault_server_client }}'
    group: '{{ vault_server_group }}'
    recurse: true

# Unarchive file sql from GZIP
- name: Extract SQL file from Gzip archive using Drush Shell
  ansible.builtin.shell: 'gunzip -c {{ ansistrano_release_path.stdout }}/sql/db.sql.gz > {{ ansistrano_release_path.stdout }}/sql/db.sql'
  # when: vault_mode == 'install'
  tags:
    - unarchive_db

# Import database from local machine to remote server
- name: Import MySQL Database
  ansible.builtin.mysql_db:
    name: '{{ vault_database_name }}'
    login_user: '{{ vault_database_user }}'
    login_password: '{{ vault_database_password }}'
    state: import
    target: '{{ ansistrano_release_path.stdout }}/sql/db.sql'
  # when: vault_mode == 'install'
  tags:
    - db_update

# Import configuration
- name: Import configuration
  command: '{{ release_drush_path }} config-import --yes --verbose'
  args:
    chdir: '{{ ansistrano_release_path.stdout }}'
  # when: vault_mode == 'update'
  tags:
    - import_config

# Add authentication to .htaccess and create .htpasswd
- name: Create .htpasswd file
  copy:
    dest: '{{ ansistrano_release_path.stdout }}/web/.htpasswd'
    content: '{{ vault_company_name }}:{{ vault_htpasswd_value }}'
    owner: '{{ vault_server_client }}'
    group: '{{ vault_server_group }}'
    mode: '0644'
  tags: auth

#Insert authentication  lines to .htaccess
- name: Insert authentication lines at the top of .htaccess
  shell: |
    if [ -f {{ ansistrano_release_path.stdout }}/web/.htaccess ]; then
      sed -i \
        '1iAuthName "Usuari autoritzat"\n\
        AuthType Basic\n\
        AuthUserFile {{ ansistrano_release_path.stdout }}/web/.htpasswd\n\
        Require valid-user' \
        {{ ansistrano_release_path.stdout }}/web/.htaccess
    else
      echo "Error: .htaccess file not found." >&2
      exit 1
    fi
  args:
    executable: /bin/bash
    chdir: '{{ ansistrano_release_path.stdout }}/web'
  tags: auth

# Remove .htpasswd file
- name: Remove .htpasswd file
  file:
    path: '{{ ansistrano_release_path.stdout }}/web/.htpasswd'
    state: absent
  tags: auth_cleanup

# Remove authentication lines from .htaccess
- name: Remove authentication lines from .htaccess
  shell: |
    if [ -f {{ ansistrano_release_path.stdout }}/web/.htaccess ]; then
      sed -i '/^AuthName "Usuari autoritzat"/,+3d' {{ ansistrano_release_path.stdout }}/web/.htaccess
    else
      echo "Error: .htaccess file not found." >&2
      exit 1
    fi
  args:
    executable: /bin/bash
    chdir: '{{ ansistrano_release_path.stdout }}/web'
  tags: auth_cleanup

# Rebuild Drupal cache
- name: Rebuild Drupal cache using Drush
  shell: |
    {{ release_drush_path }} cr
  args:
    chdir: '{{ release_drupal_path }}'
    executable: /bin/bash
  tags:
    - drupal
