---
# Check if Drupy theme exist
- name: Check if Drupy theme exists in the specified path
  ansible.builtin.stat:
    path: "{{ ansistrano_release_path.stdout }}/web/themes/custom/{{ vault_theme_name }}"
  register: theme_exists
  tags:
    - ini_theming

# Install theme
- name: Install Drupal theme using Drush
  ansible.builtin.command:
    cmd: "drush theme:install {{ vault_theme_name }} -y"
    chdir: "{{ ansistrano_release_path.stdout }}/web/themes/custom/"
  when: theme_exists.stat.exists
  tags:
    - ini_theming

# Set theme as default
- name: Set Drupal theme as default
  ansible.builtin.command:
    cmd: "drush config-set system.theme default {{ vault_theme_name }} -y"
    chdir: "{{ ansistrano_release_path.stdout }}/web/"
  when: theme_exists.stat.exists
  tags:
    - ini_theming

# Set permissionas to theme
- name: Ensure properly permissions to Theme's directory
  file:
    path: "{{ ansistrano_release_path.stdout }}/web/themes/custom/{{ vault_theme_name }}"
    mode: "0755"
    state: directory
    owner: "{{ vault_server_client }}"
    group: "{{ vault_server_group }}"
    recurse: true
  when: theme_exists.stat.exists
  tags:
    - ini_theming

# Update node JS
- name: Update Node.js in local project
  npm:
    path: "{{ ansistrano_release_path.stdout }}/web/themes/custom/{{ vault_theme_name }}"
    name: node
    version: "{{ vault_node_version }}"
  register: node_update_result
  tags:
    - ini_theming

- name: Check if Node.js update succeeded
  fail:
    msg: "Node.js update failed"
  when: node_update_result.failed
  tags:
    - ini_theming

# Install dependencies npm install
- name: Install dependencies and compile theme with npm
  npm:
    path: "{{ ansistrano_release_path.stdout }}/web/themes/custom/{{ vault_theme_name }}"
    state: present
    production: yes
  register: npm_install_result

- name: Check if npm install succeeded
  fail:
    msg: "npm install failed"
  when: npm_install_result.failed

# Compile theme
- name: Run webpack to compile theme
  shell: npm run build
  args:
    chdir: "{{ ansistrano_release_path.stdout }}/web/themes/custom/{{ vault_theme_name }}"

- debug:
    msg: "Theme '{{ vault_theme_name }}' exists."
  when: theme_exists.stat.exists

- debug:
    msg: "Theme '{{ vault_theme_name }}' does not exist."
  when: not theme_exists.stat.exists
